{
  "description": "Analyzer for BR-02 Raw Material Specification",
  "baseAnalyzerId": "prebuilt-documentAnalyzer",
  "config": {
    "returnDetails": true,
    "enableFormula": false,
    "disableContentFiltering": false,
    "estimateFieldSourceAndConfidence": true,
    "tableFormat": "html"
  },
  "fieldSchema": {
    "fields": {
      "Supplier": { "type": "string", "method": "extract", "description": "Supplier/manufacturer name from header/footer." },
      "MaterialName": { "type": "string", "method": "extract", "description": "Material/product name shown on the specification or CoA." },
      "MaterialCode": { "type": "string", "method": "extract", "description": "Supplier or internal material code/identifier if present." },
      "EffectiveDate": { "type": "string", "method": "extract", "description": "Effective/issue/revision date of the specification/CoA." },
      "QuantifiableTests": {
        "type": "array",
        "method": "extract",
        "description": "Table of quantifiable tests with numeric ranges and units (e.g., pH, viscosity, assay). One entry per test row.",
        "items": {
          "type": "object",
          "properties": {
            "Test": { "type": "string", "method": "extract", "description": "Exact test name/parameter as listed (e.g., 'pH (10% in ethanol)', 'Viscosity (25 C)')." },
            "Method": { "type": "string", "method": "extract", "description": "Test method or standard (e.g., ASTM, USP, ISO, SOP)." },
            "UOM": { "type": "string", "method": "extract", "description": "Unit of measure for the result (e.g., mPaÂ·s, g/mL, nD, cfu/g). Use the unit printed in the table." },
            "Min": { "type": "number", "method": "extract", "description": "Numeric minimum of the acceptable range, if provided. Ignore text like 'N/A'. Strip symbols and use '.' as decimal." },
            "Max": { "type": "number", "method": "extract", "description": "Numeric maximum of the acceptable range, if provided. Ignore 'N/A'." },
            "Typical": { "type": "string", "method": "extract", "description": "Typical/target value as printed. Preserve text such as '<10' or '~180' if not a pure number." }
          }
        }
      },
      "NonQuantifiableTests": {
        "type": "array",
        "method": "extract",
        "description": "Non-numeric checks (appearance, odor, declarations).",
        "items": {
          "type": "object",
          "properties": {
            "Test": { "type": "string", "method": "extract", "description": "Name of the qualitative test (e.g., 'GMO Declaration')." },
            "Result": { "type": "string", "method": "extract", "description": "Reported outcome (e.g., 'Negative', 'Compliant', 'None present')." }
          }
        }
      },
      "Components": {
        "type": "array",
        "method": "extract",
        "description": "List/table of components by INCI with Typical %, Min %, Max %, and notes. One entry per row in the composition table.",
        "items": {
          "type": "object",
          "properties": {
            "INCIName": { "type": "string", "method": "extract", "description": "INCI name of the component as listed in the table (use PCPC taxonomy wording if present)." },
            "TypicalPercent": { "type": "number", "method": "extract", "description": "Typical % w/w value for the component. Parse up to 6 decimals; remove '%' and thousand separators." },
            "MinPercent": { "type": "number", "method": "extract", "description": "Minimum % w/w if provided. If blank or 'N/A', leave empty." },
            "MaxPercent": { "type": "number", "method": "extract", "description": "Maximum % w/w if provided. If blank or 'N/A', leave empty." },
            "Notes": { "type": "string", "method": "extract", "description": "Any notes in the row (e.g., source details like 'Plant-derived (Sunflower)', assay remarks)." }
          }
        }
      },
      "Notes": { "type": "string", "method": "extract", "description": "Free-text notes or remarks sections (e.g., storage, sampling, shelf life). Concatenate if multiple note blocks exist." }
    }
  }
}
